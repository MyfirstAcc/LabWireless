########################################
#Взято с /inet4.5/examples/wireless/nic#
########################################

[General]
network = wlan5
sim-time-limit = 10s

# Уровень приложения
*.hostA.numApps = 1
*.hostA.app[0].typename = "UdpBasicApp"
*.hostA.app[0].destAddresses = "hostB"
*.hostA.app[0].destPort = 5000
*.hostA.app[0].messageLength = 1000B
*.hostA.app[0].sendInterval = exponential(10ms)
*.hostA.app[0].packetName = "myUDP"

*.hostB.numApps = 1
*.hostB.app[0].typename = "UdpSink"
*.hostB.app[0].localPort = 5000
#гарантирует, что при отправке и приеме сетевых пакетов 
#будет выполняться проверка целостности данных с помощью вычисления CRC(обнаружение ошибок) и FCS(добавление в пакет результата CRC) 
# в принципе не на что не влияет, так как в данной модели нет таких ситуаций
**.crcMode="computed"
**.fcsMode="computed"

#визуализатор
*.visualizer.mediumVisualizer.displaySignals = true
*.visualizer.physicalLinkVisualizer.displayLinks = true
*.visualizer.physicalLinkVisualizer.packetFilter = "UDPData*"

#роутинг
*.hostR*.forwarding = true
*.configurator.config = xml("<config><interface hosts='**' address='10.0.0.x' netmask='255.255.255.0'/><autoroute metric='errorRate'/></config>")
*.configurator.optimizeRoutes = false
*.host*.ipv4.routingTable.netmaskRoutes = ""
*.host*.ipv4.arp.typename = "GlobalArp"


#медиум
*.host*.wlan[0].radio.typename = "UnitDiskRadio"
*.host*.wlan[0].radio.transmitter.communicationRange = 250m
*.host*.wlan[0].radio.receiver.ignoreInterference = false
*.host*.wlan[0].radio.transmitter.interferenceRange = 500m
*.hostA.wlan[0].radio.displayInterferenceRange = true
*.hostB.wlan[0].radio.displayInterferenceRange = true
*.hostA.wlan[0].radio.displayCommunicationRange = true
*.hostB.wlan[0].radio.displayCommunicationRange = true

#полудуплекс
*.host*.wlan[0].mac.fullDuplex = false

[Config IEEE80211]
#nic
*.host*.wlan[0].typename = "Ieee80211Interface"
#режим ad-hoc также есть инфраструктурный режим и др.
*.host*.wlan[0].mgmt.typename = "Ieee80211MgmtAdhoc"
*.host*.wlan[0].agent.typename = ""
#настройки каналов (соответствует  стандарту 802.11g)
**.wlan*.bitrate = 54Mbps
**.wlan*.mac.*.rateSelection.multicastFrameBitrate = 54Mbps
**.wlan*.mac.*.rateSelection.responseAckFrameBitrate = 54Mbps
#канал для управления (ad-hoc)
**.wlan*.mac.*.rateSelection.mgmtFrameBitrate = 2Mbps
**.wlan*.mac.*.rateSelection.controlFrameBitrate = 54Mbps

[Config CSMASAMAC]
#nic
*.host*.wlan[*].typename = "WirelessInterface"
*.host*.wlan[0].mac.typename = "CsmaCaMac"
#отправка подтверждения после получения через 300 микросекунд
*.host*.wlan[0].mac.ackTimeout = 300us
#тип очереди, удаление с конца
*.host*.wlan[0].queue.typename = "DropTailQueue"
#нет ограничения на очередь (-1)
*.host*.wlan[0].queue.packetCapacity = -1
#использовать подтверждение 
*.host*.wlan[0].mac.useAck = true
#передача по среде с заданной скоростью
*.host*.wlan[0].mac.bitrate = 5Mbps
*.host*.wlan[0].radio.transmitter.bitrate = 5Mbps